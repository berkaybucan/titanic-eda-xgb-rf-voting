{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":3136,"databundleVersionId":26502,"sourceType":"competition"}],"dockerImageVersionId":30683,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Introduction\n<center><img src=\"https://i.hizliresim.com/ktlnn2g.png\" alt=\"GÃ¶rsel\" style=\"max-width: 100%; height: 400px;\"> <center>\n    <br>\n\n<center> <b> The task of predicting whether a passenger will survive the sinking of the Titanic. Exploratory Data Analysis was performed. Models were made with XGB and RF. The best parameters of the models were determined. <b><center>\n\n","metadata":{}},{"cell_type":"markdown","source":"# Python Libraries","metadata":{}},{"cell_type":"code","source":"import numpy as np \nimport pandas as pd \n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.model_selection import KFold ,GridSearchCV\n\nfrom xgboost import XGBClassifier\nfrom sklearn.ensemble import RandomForestClassifier , VotingClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score ,classification_report ,roc_auc_score\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-14T15:00:07.517643Z","iopub.execute_input":"2024-04-14T15:00:07.518041Z","iopub.status.idle":"2024-04-14T15:00:07.525503Z","shell.execute_reply.started":"2024-04-14T15:00:07.518010Z","shell.execute_reply":"2024-04-14T15:00:07.524434Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Read and Analyse Data","metadata":{}},{"cell_type":"code","source":"train_df = pd.read_csv(\"/kaggle/input/titanic/train.csv\")\ntest_df = pd.read_csv(\"/kaggle/input/titanic/test.csv\")\ngender_submission = pd.read_csv(\"/kaggle/input/titanic/gender_submission.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:07.527095Z","iopub.execute_input":"2024-04-14T15:00:07.527788Z","iopub.status.idle":"2024-04-14T15:00:07.550145Z","shell.execute_reply.started":"2024-04-14T15:00:07.527762Z","shell.execute_reply":"2024-04-14T15:00:07.549239Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_df.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:07.551238Z","iopub.execute_input":"2024-04-14T15:00:07.551499Z","iopub.status.idle":"2024-04-14T15:00:07.563238Z","shell.execute_reply.started":"2024-04-14T15:00:07.551477Z","shell.execute_reply":"2024-04-14T15:00:07.562316Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:07.566099Z","iopub.execute_input":"2024-04-14T15:00:07.566480Z","iopub.status.idle":"2024-04-14T15:00:07.580611Z","shell.execute_reply.started":"2024-04-14T15:00:07.566455Z","shell.execute_reply":"2024-04-14T15:00:07.579729Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:07.581741Z","iopub.execute_input":"2024-04-14T15:00:07.582097Z","iopub.status.idle":"2024-04-14T15:00:07.611231Z","shell.execute_reply.started":"2024-04-14T15:00:07.582074Z","shell.execute_reply":"2024-04-14T15:00:07.610375Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_df.shape","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:07.612315Z","iopub.execute_input":"2024-04-14T15:00:07.612631Z","iopub.status.idle":"2024-04-14T15:00:07.618153Z","shell.execute_reply.started":"2024-04-14T15:00:07.612601Z","shell.execute_reply":"2024-04-14T15:00:07.617375Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Exploratory Data Analysis","metadata":{}},{"cell_type":"code","source":"survived = 100*(train_df.Survived.value_counts()[1]/len(train_df.Survived))\nnot_survived   = 100*(train_df.Survived.value_counts()[0]/len(train_df.Survived))\nprint(train_df.Survived.value_counts())\n\nplt.pie(x = (survived , not_survived) , labels = ['survived' , 'not survived'] , autopct= '%.2f')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:07.619386Z","iopub.execute_input":"2024-04-14T15:00:07.619669Z","iopub.status.idle":"2024-04-14T15:00:07.707647Z","shell.execute_reply.started":"2024-04-14T15:00:07.619645Z","shell.execute_reply":"2024-04-14T15:00:07.706696Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"survival_by_gender = train_df.groupby('Sex')['Survived'].mean()\n\n# Plotting the graph\nsurvival_by_gender.plot(kind='bar', color=['red', 'blue'])\nplt.title('Survival Rate by Gender')\nplt.xlabel('Gender')\nplt.ylabel('Survival Rate')\nplt.xticks(rotation=0)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:07.709012Z","iopub.execute_input":"2024-04-14T15:00:07.709692Z","iopub.status.idle":"2024-04-14T15:00:07.887168Z","shell.execute_reply.started":"2024-04-14T15:00:07.709658Z","shell.execute_reply":"2024-04-14T15:00:07.886334Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"survival_by_gender = train_df.groupby('Age')['Survived'].mean()\n\n# Plotting the graph\nsurvival_by_gender.plot(kind='bar', color=['orange', 'purple'])\nplt.title('Survival Rate by Age')\nplt.xlabel('Age')\nplt.ylabel('Survival Rate')\nplt.xticks(rotation=0)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:07.888181Z","iopub.execute_input":"2024-04-14T15:00:07.888489Z","iopub.status.idle":"2024-04-14T15:00:08.616214Z","shell.execute_reply.started":"2024-04-14T15:00:07.888460Z","shell.execute_reply":"2024-04-14T15:00:08.615206Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"survival_by_gender = train_df.groupby('Pclass')['Survived'].mean()\n\n# Plotting the graph\nsurvival_by_gender.plot(kind='bar', color=['blue', 'red',\"purple\"])\nplt.title('Survival Rate by PClass')\nplt.xlabel('Age')\nplt.ylabel('Survival Rate')\nplt.xticks(rotation=0)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.619783Z","iopub.execute_input":"2024-04-14T15:00:08.620072Z","iopub.status.idle":"2024-04-14T15:00:08.857968Z","shell.execute_reply.started":"2024-04-14T15:00:08.620047Z","shell.execute_reply":"2024-04-14T15:00:08.857118Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Preprocess","metadata":{}},{"cell_type":"code","source":"train_df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.858907Z","iopub.execute_input":"2024-04-14T15:00:08.859156Z","iopub.status.idle":"2024-04-14T15:00:08.868236Z","shell.execute_reply.started":"2024-04-14T15:00:08.859134Z","shell.execute_reply":"2024-04-14T15:00:08.867233Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_df.drop_duplicates()\n","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.869382Z","iopub.execute_input":"2024-04-14T15:00:08.869762Z","iopub.status.idle":"2024-04-14T15:00:08.891108Z","shell.execute_reply.started":"2024-04-14T15:00:08.869729Z","shell.execute_reply":"2024-04-14T15:00:08.890224Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_df = train_df.drop(['Cabin'] , axis = 1)\ntrain_df.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.892068Z","iopub.execute_input":"2024-04-14T15:00:08.892370Z","iopub.status.idle":"2024-04-14T15:00:08.906200Z","shell.execute_reply.started":"2024-04-14T15:00:08.892344Z","shell.execute_reply":"2024-04-14T15:00:08.905021Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"m = train_df['Age'].median()\ntrain_df.Age = train_df['Age'].fillna(m)\ntrain_df.Age.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.907655Z","iopub.execute_input":"2024-04-14T15:00:08.908031Z","iopub.status.idle":"2024-04-14T15:00:08.918425Z","shell.execute_reply.started":"2024-04-14T15:00:08.907991Z","shell.execute_reply":"2024-04-14T15:00:08.917259Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"m = train_df['Embarked'].mode()[0]\ntrain_df['Embarked']= train_df['Embarked'].fillna(m)\ntrain_df['Embarked'].info()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.919443Z","iopub.execute_input":"2024-04-14T15:00:08.919749Z","iopub.status.idle":"2024-04-14T15:00:08.931244Z","shell.execute_reply.started":"2024-04-14T15:00:08.919723Z","shell.execute_reply":"2024-04-14T15:00:08.930139Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_df.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.932519Z","iopub.execute_input":"2024-04-14T15:00:08.932808Z","iopub.status.idle":"2024-04-14T15:00:08.943644Z","shell.execute_reply.started":"2024-04-14T15:00:08.932772Z","shell.execute_reply":"2024-04-14T15:00:08.942740Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_df.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.944895Z","iopub.execute_input":"2024-04-14T15:00:08.945252Z","iopub.status.idle":"2024-04-14T15:00:08.955525Z","shell.execute_reply.started":"2024-04-14T15:00:08.945221Z","shell.execute_reply":"2024-04-14T15:00:08.954598Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_df.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.956717Z","iopub.execute_input":"2024-04-14T15:00:08.956994Z","iopub.status.idle":"2024-04-14T15:00:08.967595Z","shell.execute_reply.started":"2024-04-14T15:00:08.956966Z","shell.execute_reply":"2024-04-14T15:00:08.966510Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_df.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.968826Z","iopub.execute_input":"2024-04-14T15:00:08.969249Z","iopub.status.idle":"2024-04-14T15:00:08.978297Z","shell.execute_reply.started":"2024-04-14T15:00:08.969217Z","shell.execute_reply":"2024-04-14T15:00:08.977416Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_df = test_df.drop(['Cabin'] ,axis = 1)\ntest_df.head(1)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.979576Z","iopub.execute_input":"2024-04-14T15:00:08.980397Z","iopub.status.idle":"2024-04-14T15:00:08.993989Z","shell.execute_reply.started":"2024-04-14T15:00:08.980363Z","shell.execute_reply":"2024-04-14T15:00:08.993097Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"m = test_df['Age'].median()\ntest_df.Age = train_df['Age'].fillna(m)\ntest_df.Age.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:08.995053Z","iopub.execute_input":"2024-04-14T15:00:08.995319Z","iopub.status.idle":"2024-04-14T15:00:09.005745Z","shell.execute_reply.started":"2024-04-14T15:00:08.995297Z","shell.execute_reply":"2024-04-14T15:00:09.004679Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"m = test_df['Fare'].mean()\ntest_df.Fare = train_df['Fare'].fillna(m)\ntest_df.Fare.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.006980Z","iopub.execute_input":"2024-04-14T15:00:09.007285Z","iopub.status.idle":"2024-04-14T15:00:09.016223Z","shell.execute_reply.started":"2024-04-14T15:00:09.007262Z","shell.execute_reply":"2024-04-14T15:00:09.015316Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_df.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.017363Z","iopub.execute_input":"2024-04-14T15:00:09.017618Z","iopub.status.idle":"2024-04-14T15:00:09.027291Z","shell.execute_reply.started":"2024-04-14T15:00:09.017596Z","shell.execute_reply":"2024-04-14T15:00:09.026398Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"le = LabelEncoder()\n\ntrain_df['Sex'] = le.fit_transform(train_df['Sex'])\ntrain_df['Embarked'] = le.fit_transform(train_df['Embarked'])\ntrain_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.028485Z","iopub.execute_input":"2024-04-14T15:00:09.028804Z","iopub.status.idle":"2024-04-14T15:00:09.045416Z","shell.execute_reply.started":"2024-04-14T15:00:09.028779Z","shell.execute_reply":"2024-04-14T15:00:09.044564Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"le = LabelEncoder()\n\ntest_df['Sex'] = le.fit_transform(test_df['Sex'])\ntest_df['Embarked'] = le.fit_transform(test_df['Embarked'])\ntest_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.046474Z","iopub.execute_input":"2024-04-14T15:00:09.046785Z","iopub.status.idle":"2024-04-14T15:00:09.063032Z","shell.execute_reply.started":"2024-04-14T15:00:09.046749Z","shell.execute_reply":"2024-04-14T15:00:09.062062Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"num_vars = train_df.select_dtypes(exclude = 'object')\nnum_vars.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.064167Z","iopub.execute_input":"2024-04-14T15:00:09.064558Z","iopub.status.idle":"2024-04-14T15:00:09.079911Z","shell.execute_reply.started":"2024-04-14T15:00:09.064524Z","shell.execute_reply":"2024-04-14T15:00:09.078799Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Train - Test Split","metadata":{}},{"cell_type":"code","source":"X = train_df.drop(['Ticket' , 'Name', 'Survived' , 'PassengerId'] , axis = 1)\ny = train_df['Survived']","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.080904Z","iopub.execute_input":"2024-04-14T15:00:09.081163Z","iopub.status.idle":"2024-04-14T15:00:09.086564Z","shell.execute_reply.started":"2024-04-14T15:00:09.081140Z","shell.execute_reply":"2024-04-14T15:00:09.085530Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_train , X_val , y_train , y_val = train_test_split( X, y , test_size=0.2 , random_state = 42)\n\nprint(X_train.shape)\nprint(X_val.shape)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.092581Z","iopub.execute_input":"2024-04-14T15:00:09.092870Z","iopub.status.idle":"2024-04-14T15:00:09.100978Z","shell.execute_reply.started":"2024-04-14T15:00:09.092845Z","shell.execute_reply":"2024-04-14T15:00:09.099926Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# XGBoost Model Building ","metadata":{}},{"cell_type":"code","source":" #params = {'learning_rate':[0.05,0.1],\n           #'subsample': [0.5,0.7,0.9],\n           #'n_estimators':[100 ,150],\n           #'gamma': [0.03],\n           #'max_depth': [5,7],\n           #'min_child_weight': [0.5 ,0.7],\n           #'colsample_bytree': [0.7,0.9],\n            #'device': ['cuda']\n           #}\n\n #xgboost = XGBClassifier(eval_metric = roc_auc_score ,objective = 'binary:logistic', random_state= 42)\n\n #gcv = GridSearchCV(xgboost, param_grid =  params , cv = 5 ,scoring = 'accuracy' , return_train_score = True)\n\n #gcv.fit(X , y)\n #gcv.best_params_","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.101928Z","iopub.execute_input":"2024-04-14T15:00:09.102248Z","iopub.status.idle":"2024-04-14T15:00:09.109903Z","shell.execute_reply.started":"2024-04-14T15:00:09.102214Z","shell.execute_reply":"2024-04-14T15:00:09.108938Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"params = {'colsample_bytree': 0.9,\n          'gamma': 0.03,\n          'learning_rate': 0.05,\n          'max_depth': 7,\n          'min_child_weight': 0.5,\n          'n_estimators': 180,\n          'subsample': 0.9,\n          'max_leaves':15,\n          'eval_metric': accuracy_score,\n          'objective': 'binary:logistic',\n          'random_state':42}\nxgboost = XGBClassifier(**params)\n\nxgboost.fit(X_train ,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.111002Z","iopub.execute_input":"2024-04-14T15:00:09.111314Z","iopub.status.idle":"2024-04-14T15:00:09.207564Z","shell.execute_reply.started":"2024-04-14T15:00:09.111289Z","shell.execute_reply":"2024-04-14T15:00:09.206869Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# XGBoost Model Prediction ","metadata":{}},{"cell_type":"code","source":"y_train_pred = xgboost.predict(X_train)\naccuracy_score(y_train ,y_train_pred)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.208537Z","iopub.execute_input":"2024-04-14T15:00:09.209343Z","iopub.status.idle":"2024-04-14T15:00:09.220544Z","shell.execute_reply.started":"2024-04-14T15:00:09.209315Z","shell.execute_reply":"2024-04-14T15:00:09.219753Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred = xgboost.predict(X_val)\naccuracy_score(y_val ,y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.223501Z","iopub.execute_input":"2024-04-14T15:00:09.224210Z","iopub.status.idle":"2024-04-14T15:00:09.234449Z","shell.execute_reply.started":"2024-04-14T15:00:09.224157Z","shell.execute_reply":"2024-04-14T15:00:09.233550Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(classification_report(y_val , y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.235930Z","iopub.execute_input":"2024-04-14T15:00:09.236520Z","iopub.status.idle":"2024-04-14T15:00:09.252056Z","shell.execute_reply.started":"2024-04-14T15:00:09.236485Z","shell.execute_reply":"2024-04-14T15:00:09.250957Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# RandomForestClassifier Model Building","metadata":{}},{"cell_type":"code","source":" #params = {'n_estimators':[200,300],\n           #'max_depth': [7,8],\n           #'min_samples_split':[5,7],\n           #'min_samples_leaf': [5,7]\n           #}\n\n #rfc = RandomForestClassifier( criterion = 'gini' ,random_state= 42)\n\n #gcv = GridSearchCV(rfc , param_grid =  params , cv = 3 ,scoring = 'accuracy' , return_train_score = True)\n\n #gcv.fit(X , y)\n #gcv.best_params_","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.253513Z","iopub.execute_input":"2024-04-14T15:00:09.254092Z","iopub.status.idle":"2024-04-14T15:00:09.258162Z","shell.execute_reply.started":"2024-04-14T15:00:09.254058Z","shell.execute_reply":"2024-04-14T15:00:09.257247Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"params = {'max_depth': 7,\n 'min_samples_leaf': 7,\n 'min_samples_split': 5,\n 'n_estimators': 200}\nrfc = RandomForestClassifier(**params , criterion = 'gini')\nrfc.fit(X_train , y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.260844Z","iopub.execute_input":"2024-04-14T15:00:09.263460Z","iopub.status.idle":"2024-04-14T15:00:09.687741Z","shell.execute_reply.started":"2024-04-14T15:00:09.263421Z","shell.execute_reply":"2024-04-14T15:00:09.686783Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# RandomForestClassifier Model Prediction ","metadata":{}},{"cell_type":"code","source":"y_train_pred = rfc.predict(X_train)\naccuracy_score(y_train ,y_train_pred)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.690885Z","iopub.execute_input":"2024-04-14T15:00:09.691176Z","iopub.status.idle":"2024-04-14T15:00:09.723806Z","shell.execute_reply.started":"2024-04-14T15:00:09.691152Z","shell.execute_reply":"2024-04-14T15:00:09.722983Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred = rfc.predict(X_val)\naccuracy_score(y_val ,y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.726082Z","iopub.execute_input":"2024-04-14T15:00:09.726933Z","iopub.status.idle":"2024-04-14T15:00:09.750009Z","shell.execute_reply.started":"2024-04-14T15:00:09.726901Z","shell.execute_reply":"2024-04-14T15:00:09.749068Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(classification_report(y_val , y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:00:09.751169Z","iopub.execute_input":"2024-04-14T15:00:09.751512Z","iopub.status.idle":"2024-04-14T15:00:09.765847Z","shell.execute_reply.started":"2024-04-14T15:00:09.751481Z","shell.execute_reply":"2024-04-14T15:00:09.765089Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Voting","metadata":{}},{"cell_type":"code","source":"voting = VotingClassifier(estimators = [('xgboost' , xgboost) ,('randomforest' , rfc)])\nvoting.fit(X_train , y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:02:46.744520Z","iopub.execute_input":"2024-04-14T15:02:46.744915Z","iopub.status.idle":"2024-04-14T15:02:47.270412Z","shell.execute_reply.started":"2024-04-14T15:02:46.744884Z","shell.execute_reply":"2024-04-14T15:02:47.269500Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_train_pred  = voting.predict(X_train)\naccuracy_score(y_train , y_train_pred )","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:02:56.251665Z","iopub.execute_input":"2024-04-14T15:02:56.252029Z","iopub.status.idle":"2024-04-14T15:02:56.296307Z","shell.execute_reply.started":"2024-04-14T15:02:56.251999Z","shell.execute_reply":"2024-04-14T15:02:56.295331Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred = voting.predict(X_val)\naccuracy_score(y_val , y_pred )","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:03:01.975344Z","iopub.execute_input":"2024-04-14T15:03:01.975761Z","iopub.status.idle":"2024-04-14T15:03:02.010228Z","shell.execute_reply.started":"2024-04-14T15:03:01.975731Z","shell.execute_reply":"2024-04-14T15:03:02.009335Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Submission","metadata":{}},{"cell_type":"code","source":"test_df = test_df.drop(['PassengerId' , 'Name' , 'Ticket'] , axis  = 1)\ntest_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:04:13.868932Z","iopub.execute_input":"2024-04-14T15:04:13.869711Z","iopub.status.idle":"2024-04-14T15:04:13.882650Z","shell.execute_reply.started":"2024-04-14T15:04:13.869675Z","shell.execute_reply":"2024-04-14T15:04:13.881602Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_pred  = xgboost.predict(test_df)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:04:44.822159Z","iopub.execute_input":"2024-04-14T15:04:44.823106Z","iopub.status.idle":"2024-04-14T15:04:44.830980Z","shell.execute_reply.started":"2024-04-14T15:04:44.823072Z","shell.execute_reply":"2024-04-14T15:04:44.830239Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission = pd.DataFrame()\nsubmission['PassengerId'] = gender_submission['PassengerId']\nsubmission.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:01:17.117908Z","iopub.execute_input":"2024-04-14T15:01:17.118812Z","iopub.status.idle":"2024-04-14T15:01:17.129861Z","shell.execute_reply.started":"2024-04-14T15:01:17.118774Z","shell.execute_reply":"2024-04-14T15:01:17.128897Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission['Survived'] = test_pred\nsubmission.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:04:48.343313Z","iopub.execute_input":"2024-04-14T15:04:48.343680Z","iopub.status.idle":"2024-04-14T15:04:48.353243Z","shell.execute_reply.started":"2024-04-14T15:04:48.343650Z","shell.execute_reply":"2024-04-14T15:04:48.352279Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission.to_csv('submission.csv' , index = False)","metadata":{"execution":{"iopub.status.busy":"2024-04-14T15:05:02.737265Z","iopub.execute_input":"2024-04-14T15:05:02.737645Z","iopub.status.idle":"2024-04-14T15:05:02.746127Z","shell.execute_reply.started":"2024-04-14T15:05:02.737615Z","shell.execute_reply":"2024-04-14T15:05:02.745080Z"},"trusted":true},"execution_count":null,"outputs":[]}]}